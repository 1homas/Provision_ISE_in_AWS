---


  - name: Create ISE Instance in AWS
    loop: "{{ ise_nodes }}"
    amazon.aws.ec2_instance:
      # state: present  # instances exist but not guarantee of state (e.g. running)
      state: running  # present + ensures the instances are running
      # state: started  # running + waits for EC2 status checks; ~3 minutes per node
      region: "{{ aws.region }}"
      vpc_subnet_id: "{{ subnet_private.subnet.id }}"
      image_id: "{{ item.ami  | default( ise.defaults.platform.ami ) | default('') }}"
      instance_type: "{{ item.instance_type | default( ise.defaults.platform.instance_type ) | default('') }}"
      key_name: "{{ ssh_keypair_name }}"
      network:
        assign_public_ip: yes
        delete_on_termination: yes
        private_ip_address: "{{ item.private_ip | default('') }}"
      security_group: SG_Public_Access  # name or ID
      volumes:
        - device_name: /dev/sda1
          ebs:
            delete_on_termination: true
            volume_size: "{{ item.volume_size | default( ise.defaults.platform.volume_size ) | default('') }}"
      wait: yes
      tags:
        Name:     "{{ item.name | default('ise') }}"
        hostname: "{{ item.name | default(omit) }}"
        product:  "ISE"
        project:  "{{ project_name | default('') }}"
        roles:    "{{ item.roles | default( 'Standalone') }}"
        services: "{{ item.services  | default( '[]') }}"
        started:  "{{ timestamp.date | default('') }}"
      user_data:  "hostname={{ item.name | lower }}\nprimarynameserver={{ dns_server | default('208.67.222.222') }}\ndnsdomain={{ domain_name | default('demo.local') }}\nntpserver={{ ntp_server | default('time.nist.gov') }}\ntimezone={{ ise.defaults.platform.timezone | default('Etc/UTC') }}\nusername={{ ise.defaults.ssh.username | default('iseadmin') }}\npassword={{ ise_init_password }}"
    register: ise_instances


  # - name: Show ISE Instances
  #   ansible.builtin.debug: var=ise_instances


...

