---
- name: Create ISE Instance in AWS
  loop: "{{ ise_nodes }}"
  amazon.aws.ec2_instance:
    # state: present  # instances exist but not guarantee of state (e.g. running)
    state: running # present + ensures the instances are running for public IP address!
    # state: started  # running + waits for EC2 status checks; ~3 minutes per node
    region: "{{ aws_region }}"
    vpc_subnet_id: "{{ subnet_private.subnet.id }}"
    image_id: "{{ item.ami }}"
    instance_type: "{{ item.instance_type }}"
    key_name: "{{ ssh_keypair_name }}"
    network:
      assign_public_ip: yes
      delete_on_termination: yes
      private_ip_address: "{{ item.private_ip}}"
    # security_group: "{{ sg_ise.group_id }}"
    security_group: "{{ sg_public.group_id }}"
    volumes:
      - device_name: /dev/sda1
        ebs:
          delete_on_termination: true
          volume_size: "{{ item.volume_size | default( 300 ) }}"
    wait: yes
    tags:
      Name: "{{ item.name }}"
      product: "ISE"
      hostname: "{{ item.name }}"
      project: "{{ project_name }}"
      started: "{{ '%Y-%m-%dT%H:%M:%S-%Z' | strftime }}"
      roles: "{{ item.roles | default( ['Standalone'] ) }}"
      services: "{{ item.services | default( ['Session','Profiler'] ) }}"
    # user_data: "hostname={{ item.name | lower }}\nprimarynameserver={{ dns_server | default('208.67.222.222') }}\ndnsdomain={{ domain_name | default('demo.local') }}\nntpserver={{ ntp_server | default('time.nist.gov') }}\ntimezone={{ timezone | default('Etc/UTC') }}\nusername={{ ise_username | default('iseadmin') }}\npassword={{ ise_password | default('ISEisC00L') }}"
    user_data: |
      hostname={{ item.name | lower }}
      primarynameserver={{ dns_server | default('208.67.222.222') }}
      dnsdomain={{ domain_name | default('demo.local') }}
      ntpserver={{ ntp_server | default('time.nist.gov') }}
      timezone={{ timezone | default('Etc/UTC') }}
      username={{ ise_username | default('iseadmin') }}
      password={{ ise_init_password | default(ise_password) | default('ISEisC00L') }}
  register: ise_instances

# - name: Show ISE Instances
#   ansible.builtin.debug: var=ise_instances
